{"version":3,"sources":["components/connections/connectionModal.js","components/connections/updateModal.js","components/connections/index.js","components/breadcrumb/breadcrumb.js","components/navbar.js","components/manager/FileManager.js","App.js","serviceWorker.js","index.js"],"names":["ConnectionModal","state","host","username","password","handleNewConnection","payload","_this","props","onSuccessConnection","setState","handleHost","event","target","value","handleUsername","handlePassword","_this2","this","react_default","a","createElement","Fragment","Modal_default","show","onHide","onClose","Header","closeButton","Title","Body","Form_default","Group","controlId","Label","Control","type","placeholder","onChange","Footer","Button_default","variant","onClick","Component","UpdateConnectionModal","data","ConnectionsManager","connections","openModal","openEditModal","editData","componentDidMount","loadBooks","then","t","console","log","handleModal","handleNewSuccessConnection","credentials","axios","post","response","push","message","handleUpdateSuccessConnection","put","handleRemoveConnection","id","delete","filter","connection","reset","handleSelectConnection","index","handleEditModal","get","concat","Object","objectSpread","render","className","connectionModal_ConnectionModal","updateModal_UpdateConnectionModal","map","conn","connectionId","href","promise","status","Breadcrumb","aria-label","path","length","handleSpecifyPath","folder","Navbar","FileManager","Jumbotron_default","error","tree","Spinner_default","animation","scope","handleBackPath","style","fontSize","paddingRight","file","isFile","includes","join","handleAddPath","create","defaults","xsrfCookieName","xsrfHeaderName","headers","X-CSRFToken","App","handleConnection","catch","e","pop","slice","handleDownloadFile","resetConnectionId","connections_ConnectionsManager","role","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sSAKqBA,6MAEnBC,MAAQ,CACNC,KAAM,GACNC,SAAU,GACVC,SAAU,MAGZC,oBAAsB,WACpB,IAAMC,EAAU,CACdJ,KAAMK,EAAKN,MAAMC,KACjBC,SAAUI,EAAKN,MAAME,SACrBC,SAAUG,EAAKN,MAAMG,UAEvBG,EAAKC,MAAMC,oBAAoBH,GAC/BC,EAAKG,SAAS,CAACR,KAAM,GAAIC,SAAU,GAAIC,SAAU,QAGnDO,WAAa,SAAAC,GACXL,EAAKG,SAAS,CAACR,KAAMU,EAAMC,OAAOC,WAGpCC,eAAiB,SAAAH,GACfL,EAAKG,SAAS,CAACP,SAAUS,EAAMC,OAAOC,WAGxCE,eAAiB,SAAAJ,GACfL,EAAKG,SAAS,CAACN,SAAUQ,EAAMC,OAAOC,iFAE/B,IAAAG,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAOI,KAAMN,KAAKV,MAAMgB,KAAMC,OAAQ,kBAAMR,EAAKT,MAAMkB,YACrDP,EAAAC,EAAAC,cAACE,EAAAH,EAAMO,OAAP,CAAcC,aAAW,GACvBT,EAAAC,EAAAC,cAACE,EAAAH,EAAMS,MAAP,4BAEFV,EAAAC,EAAAC,cAACE,EAAAH,EAAMU,KAAP,KAAYX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,KACVD,EAAAC,EAAAC,cAACU,EAAAX,EAAKY,MAAN,CAAYC,UAAU,kBACpBd,EAAAC,EAAAC,cAACU,EAAAX,EAAKc,MAAN,aACAf,EAAAC,EAAAC,cAACU,EAAAX,EAAKe,QAAN,CAAcC,KAAK,QAAQC,YAAY,aAAaC,SAAUpB,KAAKP,WAAYG,MAAOI,KAAKjB,MAAMC,QAGnGiB,EAAAC,EAAAC,cAACU,EAAAX,EAAKY,MAAN,CAAYC,UAAU,kBACpBd,EAAAC,EAAAC,cAACU,EAAAX,EAAKc,MAAN,iBACAf,EAAAC,EAAAC,cAACU,EAAAX,EAAKe,QAAN,CAAcC,KAAK,QAAQC,YAAY,WAAWC,SAAUpB,KAAKH,eAAgBD,MAAOI,KAAKjB,MAAME,YAGrGgB,EAAAC,EAAAC,cAACU,EAAAX,EAAKY,MAAN,CAAYC,UAAU,qBACpBd,EAAAC,EAAAC,cAACU,EAAAX,EAAKc,MAAN,iBACAf,EAAAC,EAAAC,cAACU,EAAAX,EAAKe,QAAN,CAAcC,KAAK,WAAWC,YAAY,WAAWC,SAAUpB,KAAKF,eAAgBF,MAAOI,KAAKjB,MAAMG,cAG1Ge,EAAAC,EAAAC,cAACE,EAAAH,EAAMmB,OAAP,KACEpB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAQqB,QAAQ,YAAYC,QAAS,kBAAMzB,EAAKT,MAAMkB,YAAtD,SAGAP,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAQqB,QAAQ,UAAUC,QAASxB,KAAKb,qBAAxC,4BAxDiCsC,aCAxBC,mLACV,IAAArC,EAAAW,KACP,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAOI,KAAMN,KAAKV,MAAMgB,KAAMC,OAAQ,kBAAMlB,EAAKC,MAAMkB,YACrDP,EAAAC,EAAAC,cAACE,EAAAH,EAAMO,OAAP,CAAcC,aAAW,GACvBT,EAAAC,EAAAC,cAACE,EAAAH,EAAMS,MAAP,4BAEFV,EAAAC,EAAAC,cAACE,EAAAH,EAAMU,KAAP,KAAYX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,KACVD,EAAAC,EAAAC,cAACU,EAAAX,EAAKY,MAAN,CAAYC,UAAU,kBACpBd,EAAAC,EAAAC,cAACU,EAAAX,EAAKc,MAAN,aACAf,EAAAC,EAAAC,cAACU,EAAAX,EAAKe,QAAN,CAAcC,KAAK,QAAQC,YAAY,aAAaC,SAAUpB,KAAKV,MAAMG,WAAYG,MAAOI,KAAKV,MAAMqC,KAAK3C,QAG9GiB,EAAAC,EAAAC,cAACU,EAAAX,EAAKY,MAAN,CAAYC,UAAU,kBACpBd,EAAAC,EAAAC,cAACU,EAAAX,EAAKc,MAAN,iBACAf,EAAAC,EAAAC,cAACU,EAAAX,EAAKe,QAAN,CAAcC,KAAK,QAAQC,YAAY,WAAWC,SAAUpB,KAAKV,MAAMO,eAAgBD,MAAOI,KAAKV,MAAMqC,KAAK1C,YAGhHgB,EAAAC,EAAAC,cAACU,EAAAX,EAAKY,MAAN,CAAYC,UAAU,qBACpBd,EAAAC,EAAAC,cAACU,EAAAX,EAAKc,MAAN,iBACAf,EAAAC,EAAAC,cAACU,EAAAX,EAAKe,QAAN,CAAcC,KAAK,WAAWC,YAAY,WAAWC,SAAUpB,KAAKV,MAAMQ,eAAgBF,MAAOI,KAAKV,MAAMqC,KAAKzC,cAGrHe,EAAAC,EAAAC,cAACE,EAAAH,EAAMmB,OAAP,KACEpB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAQqB,QAAQ,YAAYC,QAAS,kBAAMnC,EAAKC,MAAMkB,YAAtD,SAGAP,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAQqB,QAAQ,UAAUC,QAASxB,KAAKV,MAAMC,qBAA9C,4BA5BuCkC,aCC9BG,6MACnB7C,MAAQ,CACN8C,YAAa,GACbC,WAAW,EACXC,eAAe,EACfC,SAAU,CAAChD,KAAK,GAAIC,SAAU,GAAIC,SAAU,OAG9C+C,kBAAoB,WAClB5C,EAAK6C,YAAYC,KAAK,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,QAazCG,YAAc,WACZlD,EAAKG,SAAS,CAACsC,WAAW,EAAOC,eAAe,OAGlDS,2BAA6B,SAAAC,GAAe,IACnCZ,EAAexC,EAAKN,MAApB8C,YACPa,IAAMC,KAAK,mBAAoBF,GAAaN,KAAK,SAAAS,GAC/Cf,EAAYgB,KAAKD,EAASjB,KAAKmB,SAC/BzD,EAAKG,SAAS,CAACqC,cAAaC,WAAU,SAK1CiB,8BAAgC,WAC9BL,IAAMM,IAAI,mBAAoB3D,EAAKN,MAAMiD,UAAUG,KAAK,SAAAS,GAAQ,OAC9DvD,EAAKG,SAAS,CAACqC,YAAae,EAASjB,KAAKE,gBAE5CxC,EAAKG,SAAS,CAACuC,eAAc,OAG/BkB,uBAAyB,SAAAC,GACvBR,IAAMS,OAAO,mBAAoB,CAACxB,KAAK,CAACuB,QAAMf,KAAK,SAAAS,GACjD,IAAMf,EAAcxC,EAAKN,MAAM8C,YAAYuB,OAAO,SAAAC,GAAU,OAAIA,EAAWH,KAAOA,IAClF7D,EAAKG,SAAS,CAACqC,eAAcxC,EAAKC,MAAMgE,cAI5CC,uBAAyB,SAAAC,GACvBnE,EAAKC,MAAM8B,SAASoC,MAGtBC,gBAAkB,SAAAP,GAChBR,IAAMgB,IAAN,uBAAAC,OAAiCT,IAAMf,KAAK,SAAAS,GAC1CP,QAAQC,IAAKM,EAASjB,KAAK0B,YAC3BhE,EAAKG,SAAS,CAACwC,SAAUY,EAASjB,KAAK0B,eAEzChE,EAAKG,SAAS,CAACuC,eAAe,OAGhCtC,WAAa,SAAAC,GACXL,EAAKG,SAAS,CAACwC,SAAS4B,OAAAC,EAAA,EAAAD,CAAA,GAAKvE,EAAKN,MAAMiD,SAAjB,CAA2BhD,KAAMU,EAAMC,OAAOC,aAGvEC,eAAiB,SAAAH,GACfL,EAAKG,SAAS,CAACwC,SAAS4B,OAAAC,EAAA,EAAAD,CAAA,GAAIvE,EAAKN,MAAMiD,SAAhB,CAA0B/C,SAAUS,EAAMC,OAAOC,aAG1EE,eAAiB,SAAAJ,GACfL,EAAKG,SAAS,CAACwC,SAAS4B,OAAAC,EAAA,EAAAD,CAAA,GAAIvE,EAAKN,MAAMiD,SAAhB,CAA0B9C,SAAUQ,EAAMC,OAAOC,aAG1EkE,OAAS,WACP,OACE7D,EAAAC,EAAAC,cAAA,OAAK4D,UAAU,+CACb9D,EAAAC,EAAAC,cAAA,OAAK4D,UAAU,kBACb9D,EAAAC,EAAAC,cAAC6D,EAAD,CAAiB1D,KAAMjB,EAAKN,MAAM+C,UACjBtB,QAASnB,EAAKkD,YACdhD,oBAAqBF,EAAKmD,6BAC3CvC,EAAAC,EAAAC,cAAC8D,EAAD,CAAuB3D,KAAMjB,EAAKN,MAAMgD,cACvBvB,QAASnB,EAAKkD,YACdhD,oBAAqBF,EAAK0D,8BACpBtD,WAAYJ,EAAKI,WACjBI,eAAgBR,EAAKQ,eACrBC,eAAgBT,EAAKS,eAC3B6B,KAAMtC,EAAKN,MAAMiD,WAClC/B,EAAAC,EAAAC,cAAA,MAAI4D,UAAU,+EACZ9D,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAQe,KAAK,SAAS6C,UAAU,eAAevC,QAAS,kBAAMnC,EAAKG,SAAS,CAACsC,WAAW,MACtF7B,EAAAC,EAAAC,cAAA,QAAM4D,UAAU,yBAEpB9D,EAAAC,EAAAC,cAAA,MAAI4D,UAAU,wBACX1E,EAAKN,MAAM8C,YAAYqC,IAAI,SAACC,EAAMX,GAAP,OAC1BvD,EAAAC,EAAAC,cAAA,MAAI4D,UAAU,YACZ9D,EAAAC,EAAAC,cAAA,KAAG4D,UAAWP,IAAUnE,EAAKC,MAAM8E,aAAe,oBAAqB,WACpEC,KAAK,IAAI7C,QAAS,kBAAMnC,EAAKkE,uBAAuBC,KACpDW,EAAKnF,KACNiB,EAAAC,EAAAC,cAAA,OAAK4D,UAAU,eACb9D,EAAAC,EAAAC,cAAA,QACM4D,UAAU,cACVvC,QAAS,kBAAMnC,EAAKoE,gBAAgBU,EAAKjB,OAC/CjD,EAAAC,EAAAC,cAAA,QACM4D,UAAU,sBACVvC,QAAS,kBAAMnC,EAAK4D,uBAAuBkB,EAAKjB,2NA3FhDR,IAAMgB,IAAI,2BACV,OADhBY,UACKC,SAEH1C,EAAcyC,EAAQ3C,KAAKE,YACjCQ,QAAQC,IAAIT,GACZ7B,KAAKR,SAAS,CAAEqC,0HAlB0BJ,aCJjC,SAAS+C,EAAWlF,GACjC,OAAQW,EAAAC,EAAAC,cAAA,OAAKsE,aAAW,cAChBxE,EAAAC,EAAAC,cAAA,MAAI4D,UAAU,cACZ9D,EAAAC,EAAAC,cAAA,MAAI4D,UAAS,mBAAAJ,OAAqB,IAAMrE,EAAMoF,KAAKC,OAAS,SAAW,KACpE,IAAMrF,EAAMoF,KAAKC,OAAS,OAAU1E,EAAAC,EAAAC,cAAA,KAAGkE,KAAK,IAAI7C,QAAS,kBAAMlC,EAAMsF,kBAAkB,KAAnD,SACtCtF,EAAMoF,KAAKR,IAAI,SAACW,EAAQrB,GAAT,OACdvD,EAAAC,EAAAC,cAAA,MAAI4D,UAAS,mBAAAJ,OAAqBH,EAAM,IAAMlE,EAAMoF,KAAKC,OAAS,SAAW,KAC1EnB,EAAM,IAAMlE,EAAMoF,KAAKC,OAASE,EAAU5E,EAAAC,EAAAC,cAAA,KAAGkE,KAAK,IAAI7C,QAAS,kBAAMlC,EAAMsF,kBAAkBpB,KAASqB,QCLxG,SAASC,EAAOxF,GAE7B,OACIW,EAAAC,EAAAC,cAAA,OAAK4D,UAAU,kEACb9D,EAAAC,EAAAC,cAAA,KAAG4D,UAAU,sCAAsCM,KAAK,KAAxD,gBACwB,OAAvB/E,EAAM8E,aAAwBnE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,MAASH,EAAAC,EAAAC,cAACqE,EAAD,CAAYE,KAAMpF,EAAMoF,KAAME,kBAAmBtF,EAAMsF,oBAC/F3E,EAAAC,EAAAC,cAAA,MAAI4D,UAAU,mBACZ9D,EAAAC,EAAAC,cAAA,MAAI4D,UAAU,wBACZ9D,EAAAC,EAAAC,cAAA,KAAG4D,UAAU,WAAWM,KAAK,IAAI7C,QAPjB,kBAAMkB,IAAMS,OAAO,+BAOnC,8DCRG,SAAS4B,EAAYzF,GAClC,OAA4B,IAAxBA,EAAM8E,aAEJnE,EAAAC,EAAAC,cAAA,OAAK4D,UAAU,gEACb9D,EAAAC,EAAAC,cAAC6E,EAAA9E,EAAD,CAAW6D,UAAU,sBACnB9D,EAAAC,EAAAC,cAAA,UAAKb,EAAM2F,OACXhF,EAAAC,EAAAC,cAAA,qDAMmB,OAAvBb,EAAM8E,aAENnE,EAAAC,EAAAC,cAAA,OAAK4D,UAAU,gEACb9D,EAAAC,EAAAC,cAAC6E,EAAA9E,EAAD,CAAW6D,UAAU,sBACnB9D,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,4DAMJb,EAAM4F,OAAS,GACTjF,EAAAC,EAAAC,cAACgF,EAAAjF,EAAD,CAASkF,UAAU,SAAS7D,QAAQ,cAEvCtB,EAAAC,EAAAC,cAAA,SAAO4D,UAAU,SACtB9D,EAAAC,EAAAC,cAAA,SAAO4D,UAAU,eACjB9D,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIkF,MAAM,OAAV,UAGFpF,EAAAC,EAAAC,cAAA,aACuB,IAAtBb,EAAMoF,KAAKC,OAAgB1E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,MAASH,EAAAC,EAAAC,cAAA,UACnCF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGkE,KAAK,IAAI7C,QAASlC,EAAMgG,gBAC7BrF,EAAAC,EAAAC,cAAA,QAAMoF,MAAO,CAACC,SAAU,OAAQC,aAAc,QAAS1B,UAAU,uBAD/D,OAEJ9D,EAAAC,EAAAC,cAAA,YAEDb,EAAM4F,KAAKhB,IAAI,SAAAwB,GACd,IAAIC,EAASD,EAAKE,SAAS,KAC3B,OAAQ3F,EAAAC,EAAAC,cAAA,UACNF,EAAAC,EAAAC,cAAA,MAAI4D,UAAU,SACX4B,EACA1F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAAEH,EAAAC,EAAAC,cAAA,KAAGkE,KAAI,sBAAAV,OAAwBrE,EAAMoF,KAAKmB,KAAK,KAAxC,KAAAlC,OAAgD+B,GAAQ/F,OAAO,UAASM,EAAAC,EAAAC,cAAA,QAAMoF,MAAO,CAACC,SAAU,OAAQC,aAAc,QAAS1B,UAAU,gBAClJ2B,IAEAzF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAAEH,EAAAC,EAAAC,cAAA,KAAGkE,KAAK,IAAI7C,QAAS,kBAAMlC,EAAMwG,cAAcJ,KAChDzF,EAAAC,EAAAC,cAAA,QAAMoF,MAAO,CAACC,SAAU,OAAQC,aAAc,QAAS1B,UAAU,kBAAkB2B,UC1CjGhD,IAAMqD,OAAO,CAACrD,IAAMsD,SAASC,eAAiB,aAAc,CAACvD,IAAMsD,SAASE,eAAiB,gBAC5ExD,IAAMqD,OAAO,CAC5BI,QAAS,CAACC,cAAe,eAD3B,IAuFeC,6MAlFbtH,MAAQ,CACNqF,aAAc,KACdM,KAAK,GACLQ,KAAM,GACND,MAAO,MAGTqB,iBAAmB,SAAApD,GACjB7D,EAAKG,SAAS,CAAC4E,aAAalB,IAC5BR,IAAMC,KAAK,eAAgB,CAACO,OAAKf,KAAK,SAAAS,GACpCF,IAAMC,KAAK,gBAAgBR,KAAK,SAAAS,GAChCvD,EAAKG,SAAS,CAAC0F,KAAMtC,EAASjB,KAAKuD,WAElCqB,MAAM,SAAAC,GACPnH,EAAKG,SAAS,CAACyF,MAAOuB,EAAE5D,SAASjB,KAAKsD,MAAOb,cAAc,SAK/D0B,cAAgB,SAAAjB,GAAU,IACjBH,EAAQrF,EAAKN,MAAb2F,KACPA,EAAK7B,KAAKgC,GACVxF,EAAKG,SAAS,CAACkF,SACfhC,IAAMC,KAAK,eAAgB,CAAC+B,SAAOvC,KAAK,SAAAS,GACtCP,QAAQC,IAAIM,EAASjB,KAAKuD,MAC1B7F,EAAKG,SAAS,CAAC0F,KAAMtC,EAASjB,KAAKuD,YAIvCI,eAAiB,WAAM,IACdZ,EAAQrF,EAAKN,MAAb2F,KACPA,EAAK+B,MACLpH,EAAKG,SAAS,CAACkF,SACfhC,IAAMC,KAAK,eAAgB,CAAC+B,SAAOvC,KAAK,SAAAS,GACtCP,QAAQC,IAAIM,EAASjB,KAAKuD,MAC1B7F,EAAKG,SAAS,CAAC0F,KAAMtC,EAASjB,KAAKuD,YAIvCN,kBAAoB,SAAApB,GAAS,IACtBkB,EAAQrF,EAAKN,MAAb2F,KACLA,EAAOA,EAAKgC,MAAM,EAAGlD,EAAM,GAC3BnE,EAAKG,SAAS,CAACkF,SACfhC,IAAMC,KAAK,eAAgB,CAAC+B,SAAOvC,KAAK,SAAAS,GACtCvD,EAAKG,SAAS,CAAC0F,KAAMtC,EAASjB,KAAKuD,YAIvCyB,mBAAqB,SAAAjB,GAAQ,IACpBhB,EAAQrF,EAAKN,MAAb2F,KACPA,EAAK7B,KAAK6C,GACVrG,EAAKG,SAAS,CAACkF,SACfhC,IAAMgB,IAAN,sBAAAC,OAAgCe,EAAKmB,KAAK,UAG5Ce,kBAAoB,WAClBvH,EAAKG,SAAS,CAAC4E,aAAc,gFAI7B,OACEnE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAC2E,EAAD,CAAQJ,KAAM1E,KAAKjB,MAAM2F,KAAME,kBAAmB5E,KAAK4E,kBAAmBR,aAAcpE,KAAKjB,MAAMqF,eACnGnE,EAAAC,EAAAC,cAAC0G,EAAD,CAAoBzC,aAAcpE,KAAKjB,MAAMqF,aAAchD,SAAUpB,KAAKsG,iBAAkBhD,MAAOtD,KAAK4G,oBACxG3G,EAAAC,EAAAC,cAAA,QAAM2G,KAAK,OAAO/C,UAAU,sCAC1B9D,EAAAC,EAAAC,cAAA,OACE4D,UAAU,2GACV9D,EAAAC,EAAAC,cAAC4E,EAAD,CAAaX,aAAcpE,KAAKjB,MAAMqF,aACzBM,KAAM1E,KAAKjB,MAAM2F,KACjBQ,KAAMlF,KAAKjB,MAAMmG,KACjBY,cAAe9F,KAAK8F,cACpBR,eAAgBtF,KAAKsF,eACrBqB,mBAAoB3G,KAAK2G,mBACzB1B,MAAOjF,KAAKjB,MAAMkG,kBA1EzBxD,aCFEsF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAStD,OAAO7D,EAAAC,EAAAC,cAACkH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvF,KAAK,SAAAwF,GACjCA,EAAaC","file":"static/js/main.213e5a6a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\n\nexport default class ConnectionModal extends Component {\n\n  state = {\n    host: '',\n    username: '',\n    password: '',\n  };\n\n  handleNewConnection = () => {\n    const payload = {\n      host: this.state.host,\n      username: this.state.username,\n      password: this.state.password,\n    };\n    this.props.onSuccessConnection(payload);\n    this.setState({host: '', username: '', password: ''});\n  };\n\n  handleHost = event => {\n    this.setState({host: event.target.value});\n  };\n\n  handleUsername = event => {\n    this.setState({username: event.target.value});\n  };\n\n  handlePassword = event => {\n    this.setState({password: event.target.value});\n  };\n  render() {\n    return (\n      <>\n        <Modal show={this.props.show} onHide={() => this.props.onClose()}>\n          <Modal.Header closeButton>\n            <Modal.Title>Add new connection</Modal.Title>\n          </Modal.Header>\n          <Modal.Body><Form>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Host</Form.Label>\n              <Form.Control type=\"input\" placeholder=\"Enter host\" onChange={this.handleHost} value={this.state.host}/>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"input\" placeholder=\"Username\" onChange={this.handleUsername} value={this.state.username}/>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.handlePassword} value={this.state.password}/>\n            </Form.Group>\n          </Form></Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => this.props.onClose()}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={this.handleNewConnection}>\n              Add connection\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\n\nexport default class UpdateConnectionModal extends Component {\n  render() {\n    return (\n      <>\n        <Modal show={this.props.show} onHide={() => this.props.onClose()}>\n          <Modal.Header closeButton>\n            <Modal.Title>Add new connection</Modal.Title>\n          </Modal.Header>\n          <Modal.Body><Form>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Host</Form.Label>\n              <Form.Control type=\"input\" placeholder=\"Enter host\" onChange={this.props.handleHost} value={this.props.data.host}/>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"input\" placeholder=\"Username\" onChange={this.props.handleUsername} value={this.props.data.username}/>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.props.handlePassword} value={this.props.data.password}/>\n            </Form.Group>\n          </Form></Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => this.props.onClose()}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={this.props.onSuccessConnection}>\n              Add connection\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nimport axios from \"axios\";\nimport ConnectionModal from \"./connectionModal\";\nimport UpdateConnectionModal from \"./updateModal\";\n\nexport default class ConnectionsManager extends Component {\n  state = {\n    connections: [],\n    openModal: false,\n    openEditModal: false,\n    editData: {host:'', username: '', password: ''},\n  };\n\n  componentDidMount = () => {\n    this.loadBooks().then(t => console.log(t))\n  };\n\n  async loadBooks() {\n    const promise = await axios.get(\"/api/connections\");\n    if(promise.status === 200)\n    {\n      const connections = promise.data.connections;\n      console.log(connections);\n      this.setState({ connections });\n    }\n  }\n\n  handleModal = () => {\n    this.setState({openModal: false, openEditModal: false});\n  };\n\n  handleNewSuccessConnection = credentials => {\n    const {connections} = this.state;\n    axios.post('/api/connections', credentials).then(response => {\n      connections.push(response.data.message);\n      this.setState({connections, openModal:false});\n    }\n    );\n  };\n\n  handleUpdateSuccessConnection = () => {\n    axios.put('/api/connections', this.state.editData).then(response =>\n      this.setState({connections: response.data.connections})\n    );\n    this.setState({openEditModal:false});\n  };\n\n  handleRemoveConnection = id => {\n    axios.delete('/api/connections', {data:{id}}).then(response => {\n      const connections = this.state.connections.filter(connection => connection.id !== id);\n      this.setState({connections}, this.props.reset());\n    });\n  };\n\n  handleSelectConnection = index => {\n    this.props.onChange(index);\n  };\n\n  handleEditModal = id => {\n    axios.get(`/api/connections?id=${id}`).then(response => {\n      console.log( response.data.connection);\n      this.setState({editData: response.data.connection});\n    });\n    this.setState({openEditModal: true});\n  };\n\n  handleHost = event => {\n    this.setState({editData: {...this.state.editData, host: event.target.value}});\n  };\n\n  handleUsername = event => {\n    this.setState({editData:{...this.state.editData, username: event.target.value}});\n  };\n\n  handlePassword = event => {\n    this.setState({editData:{...this.state.editData, password: event.target.value}});\n  };\n\n  render = () => {\n    return(\n      <nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\n        <div className=\"sidebar-sticky\">\n          <ConnectionModal show={this.state.openModal}\n                           onClose={this.handleModal}\n                           onSuccessConnection={this.handleNewSuccessConnection}/>\n          <UpdateConnectionModal show={this.state.openEditModal}\n                           onClose={this.handleModal}\n                           onSuccessConnection={this.handleUpdateSuccessConnection}\n                                 handleHost={this.handleHost}\n                                 handleUsername={this.handleUsername}\n                                 handlePassword={this.handlePassword}\n                           data={this.state.editData}/>\n          <h6 className=\"d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n            <h5>Connections:</h5>\n            <button type=\"button\" className=\"btn btn-link\" onClick={() => this.setState({openModal: true})}>\n              <span className=\"fas fa-plus-circle\"/></button>\n          </h6>\n          <ul className=\"nav flex-column mb-2\">\n            {this.state.connections.map((conn, index) => (\n              <li className=\"nav-item\">\n                <a className={index === this.props.connectionId ? 'selected nav-link': 'nav-link'}\n                   href=\"#\" onClick={() => this.handleSelectConnection(index)}>\n                  {conn.host}\n                  <div className=\"float-right\">\n                    <span\n                          className=\"fas fa-edit\"\n                          onClick={() => this.handleEditModal(conn.id)}/>\n                    <span\n                          className=\"fas fa-minus-circle\"\n                          onClick={() => this.handleRemoveConnection(conn.id)}/>\n                  </div>\n                </a>\n              </li>)\n            )}\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n}","import React from 'react';\n\nexport default function Breadcrumb(props) {\n  return (<nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className={`breadcrumb-item ${0 === props.path.length ? 'active' : ''}`}>\n              {0 === props.path.length ? 'Home' : (<a href=\"#\" onClick={() => props.handleSpecifyPath(0)}>Home</a>)}</li>\n            {props.path.map((folder, index) =>\n              <li className={`breadcrumb-item ${index+1 === props.path.length ? 'active' : ''}`}>\n                {index+1 === props.path.length ? folder : (<a href=\"#\" onClick={() => props.handleSpecifyPath(index)}>{folder}</a>)}\n              </li>)}\n          </ol>\n        </nav>);\n}","import React from 'react';\nimport axios from 'axios';\nimport Breadcrumb from \"./breadcrumb/breadcrumb\";\n\nexport default function Navbar(props) {\n  const deleteConnections = () => axios.delete('/api/connections?all=true');\n  return (\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n        <a className=\"navbar-brand col-sm-3 col-md-2 mr-0\" href=\"#\">SFTP Manager</a>\n        {props.connectionId === null? (<></>) : <Breadcrumb path={props.path} handleSpecifyPath={props.handleSpecifyPath}/>}\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap\">\n            <a className=\"nav-link\" href=\"#\" onClick={deleteConnections}>Clear connections</a>\n          </li>\n        </ul>\n      </nav>);\n}","import React, { Component } from 'react';\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nexport default function FileManager(props){\n  if (props.connectionId === -1){\n      return (\n        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6 offset-3 float-md-center\">\n          <Jumbotron className=\"align-items-center\">\n            <h1>{props.error}</h1>\n            <p>\n              Edit the connection or select another.\n            </p>\n          </Jumbotron>\n        </div>)\n    }\n    if (props.connectionId === null){\n      return (\n        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6 offset-3 float-md-center\">\n          <Jumbotron className=\"align-items-center\">\n            <h1>No connection selected</h1>\n            <p>\n              Please, select the connection at the sidebar.\n            </p>\n          </Jumbotron>\n        </div>)\n    }\n    if (props.tree === []){\n      return  <Spinner animation=\"border\" variant=\"secondary\" />;\n    }\n    return(<table className=\"table\">\n      <thead className=\"thead-light\">\n      <tr>\n        <th scope=\"col\">File</th>\n      </tr>\n      </thead>\n      <tbody>\n      {props.path.length === 0 ? (<></>): (<tr>\n        <td><a href=\"#\" onClick={props.handleBackPath}>\n          <span style={{fontSize: '2rem', paddingRight: '1rem'}} className=\"fas fa-folder-open\"/>..</a></td>\n        <td/>\n      </tr>)}\n      {props.tree.map(file => {\n        let isFile = file.includes('.');\n        return (<tr>\n          <td className=\"files\">\n            {isFile ?\n            (<><a href={`/api/download?path=${props.path.join('/')}/${file}`} target=\"_blank\"><span style={{fontSize: '2rem', paddingRight: '1rem'}} className=\"fas fa-file\"/>\n            {file}</a></>)\n            :\n            (<><a href=\"#\" onClick={() => props.handleAddPath(file)}>\n              <span style={{fontSize: '2rem', paddingRight: '1rem'}} className=\"fas fa-folder\"/>{file}</a></>)}\n          </td>\n        </tr>);\n      })}\n      </tbody>\n    </table>);\n  }","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport axios from 'axios';\n\nimport ConnectionsManager from \"./components/connections/index\";\nimport Navbar from \"./components/navbar\";\nimport FileManager from \"./components/manager/FileManager\";\n\naxios.create([axios.defaults.xsrfCookieName = \"csrftoken\"], [axios.defaults.xsrfHeaderName = 'X-CSRFToken']);\nconst instance = axios.create({\n  headers: {\"X-CSRFToken\": \"csrfToken\"}\n});\n\nclass App extends Component {\n  state = {\n    connectionId: null,\n    path:[],\n    tree: [],\n    error: ''\n  };\n\n  handleConnection = id => {\n    this.setState({connectionId:id});\n    axios.post('/api/connect', {id}).then(response => {\n      axios.post('/api/browser').then(response => {\n      this.setState({tree: response.data.tree});\n    });\n    }).catch(e => {\n      this.setState({error: e.response.data.error, connectionId:-1})\n    });\n\n  };\n\n  handleAddPath = folder => {\n    const {path} = this.state;\n    path.push(folder);\n    this.setState({path});\n    axios.post('/api/browser', {path}).then(response => {\n      console.log(response.data.tree);\n      this.setState({tree: response.data.tree});\n    })\n  };\n\n  handleBackPath = () => {\n    const {path} = this.state;\n    path.pop();\n    this.setState({path});\n    axios.post('/api/browser', {path}).then(response => {\n      console.log(response.data.tree);\n      this.setState({tree: response.data.tree});\n    });\n  };\n\n  handleSpecifyPath = index => {\n    let {path} = this.state;\n    path = path.slice(0, index+1);\n    this.setState({path});\n    axios.post('/api/browser', {path}).then(response => {\n      this.setState({tree: response.data.tree});\n    });\n  };\n\n  handleDownloadFile = file => {\n    const {path} = this.state;\n    path.push(file);\n    this.setState({path});\n    axios.get(`/api/download?path=${path.join('/')}`);\n  };\n\n  resetConnectionId = () => {\n    this.setState({connectionId: null});\n  };\n\n  render() {\n    return (\n      <>\n        <Navbar path={this.state.path} handleSpecifyPath={this.handleSpecifyPath} connectionId={this.state.connectionId}/>\n        <ConnectionsManager connectionId={this.state.connectionId} onChange={this.handleConnection} reset={this.resetConnectionId}/>\n        <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n          <div\n            className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n            <FileManager connectionId={this.state.connectionId}\n                         path={this.state.path}\n                         tree={this.state.tree}\n                         handleAddPath={this.handleAddPath}\n                         handleBackPath={this.handleBackPath}\n                         handleDownloadFile={this.handleDownloadFile}\n                         error={this.state.error}\n            />\n          </div>\n        </main>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}